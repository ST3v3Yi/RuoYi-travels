<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.travels.mapper.SpotReplyMapper">
    
    <resultMap type="SpotReply" id="SpotReplyResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="spotId"    column="spot_id"    />
        <result property="commentId"    column="comment_id"    />
        <result property="toUserId"    column="to_user_id"    />
        <result property="content"    column="content"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectSpotReplyVo">
        select id, user_id, spot_id, comment_id, to_user_id, content, create_time from tb_spot_reply
    </sql>

    <select id="selectSpotReplyList" parameterType="SpotReply" resultMap="SpotReplyResult">
        <include refid="selectSpotReplyVo"/>
        <where>  
            <if test="userId != null "> and user_id like concat('%', #{userId}, '%')</if>
            <if test="spotId != null "> and spot_id like concat('%', #{spotId}, '%')</if>
            <if test="commentId != null "> and comment_id like concat('%', #{commentId}, '%')</if>
            <if test="toUserId != null "> and to_user_id like concat('%', #{toUserId}, '%')</if>
        </where>
    </select>
    
    <select id="selectSpotReplyById" parameterType="Long" resultMap="SpotReplyResult">
        <include refid="selectSpotReplyVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSpotReply" parameterType="SpotReply" useGeneratedKeys="true" keyProperty="id">
        insert into tb_spot_reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="spotId != null">spot_id,</if>
            <if test="commentId != null">comment_id,</if>
            <if test="toUserId != null">to_user_id,</if>
            <if test="content != null">content,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="spotId != null">#{spotId},</if>
            <if test="commentId != null">#{commentId},</if>
            <if test="toUserId != null">#{toUserId},</if>
            <if test="content != null">#{content},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateSpotReply" parameterType="SpotReply">
        update tb_spot_reply
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="spotId != null">spot_id = #{spotId},</if>
            <if test="commentId != null">comment_id = #{commentId},</if>
            <if test="toUserId != null">to_user_id = #{toUserId},</if>
            <if test="content != null">content = #{content},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSpotReplyById" parameterType="Long">
        delete from tb_spot_reply where id = #{id}
    </delete>

    <delete id="deleteSpotReplyByIds" parameterType="String">
        delete from tb_spot_reply where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>