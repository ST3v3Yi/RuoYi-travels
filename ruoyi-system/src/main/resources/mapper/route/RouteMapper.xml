<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.travels.mapper.RouteMapper">
    
    <resultMap type="Route" id="RouteResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="coverImg"    column="cover_img"    />
        <result property="counts"    column="counts"    />
        <result property="releaseTime"    column="release_time"    />
        <result property="day"    column="day"    />
        <result property="cost"    column="cost"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="avatar"    column="avatar"    />
        <result property="deptId"    column="dept_id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="introduction"    column="introduction"    />
        <result property="content"    column="content"    />
        <result property="status"    column="status"    />
        <result property="isDeleted"    column="is_deleted"    />
    </resultMap>

    <resultMap type="RecRoute" id="RecRouteResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="coverImg"    column="cover_img"    />
        <result property="counts"    column="counts"    />
        <result property="releaseTime"    column="release_time"    />
        <result property="isDeleted"    column="is_deleted"    />
        <result property="commentsCount"    column="comments_count" />
        <result property="replyCount"    column="reply_count" />
    </resultMap>

    <resultMap id="RecordResult" type="Record">
        <result property="userId"    column="user_id"    />
        <result property="type"    column="type"    />
        <result property="routeId"    column="route_id"    />
        <result property="counts"    column="counts"    />
        <result property="isFavorite"    column="is_favorite"    />
        <result property="rating"    column="rating"    />
        <result property="tags"    column="tags" />
    </resultMap>

    <sql id="selectRouteVo">
        select id, title, cover_img, counts, release_time, day, cost, user_id, user_name, dept_id, dept_name, create_time, update_time, introduction, content, status, is_deleted from tb_route
    </sql>

    <select id="selectRouteList" parameterType="Route" resultMap="RouteResult">
        <include refid="selectRouteVo"/>
        <where>  
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
            <if test="day != null "> and day &lt;= #{day}</if>
            <if test="cost != null "> and cost &lt;= #{cost}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="isDeleted != null "> and is_deleted = #{isDeleted}</if>
        </where>
    </select>

    <select id="selectReleasedRouteList" resultMap="RouteResult">
        select tb_route.*, sys_user.avatar
        from tb_route, sys_user
        <where>
            tb_route.user_id = sys_user.user_id and is_deleted = 0
        </where>
    </select>

    <select id="selectRouteByDay" parameterType="Route" resultMap="RouteResult">
        <include refid="selectRouteVo"/>
        <if test="upper != null">
            where day between #{lower} and #{upper}
        </if>
        <if test="upper == null">
            where day &gt;= #{lower}
        </if>
    </select>

    <select id="selectRouteByPrice" parameterType="Route" resultMap="RouteResult">
        <include refid="selectRouteVo"/>
        <if test="minPrice != null and maxPrice != null">
            where cost between #{minPrice} and #{maxPrice}
        </if>
        <if test="maxPrice == null and minPrice != null">
            where cost &gt;= #{minPrice}
        </if>
        <if test="minPrice == null and maxPrice != null">
            where cost &lt;= #{maxPrice}
        </if>
    </select>
    
    <select id="selectRouteById" parameterType="Long" resultMap="RouteResult">
        <include refid="selectRouteVo"/>
        where id = #{id}
    </select>

    <select id="selectRecRoute" resultMap="RecRouteResult">
        /*通过 LEFT JOIN 将 tb_route 表、tb_route_comments 表和 tb_route_reply 表关联起来，
          使用 GROUP BY 子句将查询结果按照 tb_route 表的 id 列进行分组。使用 COUNT(tb_route_comments.id) 计算每条路线攻略的评论数量，
          并使用 COALESCE(SUM(tb_route_reply.reply_count), 0) 计算每条评论的回复数量。
          如果某个评论没有回复，可以使用 COALESCE 函数将 NULL 值转换成 0。*/
        SELECT
            tb_route.*,
            COUNT(tb_route_comments.id) AS comments_count,
            COALESCE(SUM(tb_route_reply.reply_count), 0) AS reply_count
        FROM
            tb_route
                LEFT JOIN
            tb_route_comments
            ON
                tb_route.id = tb_route_comments.route_id
                LEFT JOIN
            (SELECT
                 tb_route_comments.id AS comment_id,
                 COUNT(tb_route_reply.id) AS reply_count
             FROM
                 tb_route_comments
                     LEFT JOIN
                 tb_route_reply
                 ON
                     tb_route_comments.id = tb_route_reply.comment_id
             GROUP BY
                 tb_route_comments.id) AS tb_route_reply
            ON
                tb_route_comments.id = tb_route_reply.comment_id
        WHERE
            tb_route.is_deleted = 0
        GROUP BY
            tb_route.id
    </select>

    <select id="selectMAXId" resultType="Long">
        select MAX(id) from tb_route
    </select>

    <select id="selectRecordAboutRouteByUserId" parameterType="Long" resultMap="RecordResult">
        SELECT
            tb_user_records.user_id,
            tb_user_records.type,
            tb_user_records.route_id,
            COUNT(*) AS counts,
            IF(tb_route_favorite.route_id IS NOT NULL, true, false) AS is_favorite,
            IFNULL(tb_route_rating.rating, 0) AS rating,
            GROUP_CONCAT(tb_route_tag.tag SEPARATOR ',') AS tags
        FROM tb_user_records
                 LEFT JOIN tb_route_favorite
                           ON tb_user_records.route_id = tb_route_favorite.route_id
                               AND tb_user_records.user_id = tb_route_favorite.user_id
                 LEFT JOIN tb_route_rating
                           ON tb_user_records.route_id = tb_route_rating.route_id
                               AND tb_user_records.user_id = tb_route_rating.user_id
                 LEFT JOIN tb_route_tag
                           ON tb_user_records.route_id = tb_route_tag.route_id
        WHERE tb_user_records.type = 1 AND tb_user_records.user_id = #{userId}
        GROUP BY tb_user_records.user_id, tb_user_records.type, tb_user_records.route_id
    </select>

    <select id="selectRouteByUserId" parameterType="Long" resultMap="RouteResult">
        SELECT * FROM tb_route
        <where>
            user_id = #{userId}
        </where>
        ORDER BY id DESC
    </select>

    <select id="selectRouteNumByUserId" parameterType="Long" resultType="integer">
        select COUNT(*)
        from tb_route
        where user_id = #{userId}
    </select>
        
    <insert id="insertRoute" parameterType="Route" useGeneratedKeys="true" keyProperty="id">
        insert into tb_route
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="title != null">title,</if>
            <if test="coverImg != null">cover_img,</if>
            <if test="counts != null">counts,</if>
            <if test="releaseTime != null">release_time,</if>
            <if test="day != null">day,</if>
            <if test="cost != null">cost,</if>
            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="deptName != null">dept_name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="introduction != null">introduction,</if>
            <if test="content != null">content,</if>
            <if test="status != null">status,</if>
            <if test="isDeleted != null">is_deleted,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="title != null">#{title},</if>
            <if test="coverImg != null">#{coverImg},</if>
            <if test="counts != null">#{counts},</if>
            <if test="releaseTime != null">#{releaseTime},</if>
            <if test="day != null">#{day},</if>
            <if test="cost != null">#{cost},</if>
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="deptName != null">#{deptName},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="introduction != null">#{introduction},</if>
            <if test="content != null">#{content},</if>
            <if test="status != null">#{status},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
         </trim>
    </insert>

    <update id="updateRoute" parameterType="Route">
        update tb_route
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null">title = #{title},</if>
            <if test="coverImg != null">cover_img = #{coverImg},</if>
            <if test="counts != null">counts = #{counts},</if>
            <if test="releaseTime != null">release_time = #{releaseTime},</if>
            <if test="day != null">day = #{day},</if>
            <if test="cost != null">cost = #{cost},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="deptName != null">dept_name = #{deptName},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
            <if test="content != null">content = #{content},</if>
            <if test="status != null">status = #{status},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteRouteById" parameterType="Long">
        delete from tb_route where id = #{id}
    </delete>

    <delete id="deleteRouteByIds" parameterType="String">
        delete from tb_route where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>